<?php

/**
 * @file
 * Contains entity_view_group_bypass.module.
 */


use Drupal\views\ViewExecutable;
use \Drupal\views\Plugin\views\query\QueryPluginBase;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * Implements hook_views_query_alter().
 */
function depth_taxonomy_view_lookup_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'organizations_with_staff' && strpos($view->current_display, 'depth_taxonomy_views_query_alter') === 0) {
    $contextual_args = $view->args;
    $taxonomy_service = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term");
    $parent = array_shift($contextual_args);
    $properties = [
      'vid' => 'organization',
      'name' => $parent
    ];
    $terms = $taxonomy_service->loadByProperties($properties);
    $parent_term = array_values($terms)[0];
    foreach ($contextual_args as $arg) {
      $properties = [
        'vid' => 'organization',
        'name' => $arg,
        'parent' => $parent_term->id()
      ];
      $terms = $taxonomy_service->loadByProperties($properties);
      if (count($terms) > 0) {
        $parent_term = array_values($terms)[0];
      } else {
        throw new NotFoundHttpException();
      }
    }

    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        // If this is the part of the query filtering on title, chang the
        // condition to filter on node ID.
        if ($condition['field'] == 'field_organization_taxonomy_term_field_data.nid') {
          $condition = [
            'field' => 'node.nid',
            'value' => $view->exposed_raw_input['title'],
            'operator' => '=',
          ];
        }
      }


//    $query->where[1]['conditions'][] = [
//      'field' => 'taxonomy_term_field_data.tid',
//      'value' => $parent_term->id(),
//      'operator' => '=',
//    ];
    }
  }
}


