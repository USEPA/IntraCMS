<?php

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function epa_intranet_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}


function epa_intranet_preprocess_image(&$variables) {
  if (isset($variables['style_name'])) {
    if (isset($variables['style_name']) && $variables['style_name'] == 'media_block_image') {
      $variables['attributes']['class'][] = 'usa-media-block__img';
      $variables['attributes']['class'][] = 'rounded-circle';
    }
    if ($variables['style_name'] == 'card') {
      $variables['attributes']['class'][] = 'card-img-top';
      $variables['attributes']['class'][] = 'w-100';
      unset($variables['attributes']['width']);
      unset($variables['attributes']['height']);
    }
    if ($variables['style_name'] == 'staff_member_card') {
      $variables['attributes']['width'] = 'auto';
      $variables['attributes']['height'] = 150;
    }
  }
}

function epa_intranet_preprocess_field(&$variables, $hook) {
  $elements = $variables['element'];
  if ($elements['#field_name'] == 'field_caption') {
    $variables['attributes']['class'][] = 'p-4 mx-5';
  }
  if ($elements['#view_mode'] == 'slideshow' && $elements['#field_name'] == 'image' || $elements['#field_name'] == 'field_slide_image') {
    $variables['attributes']['class'][] = 'px-5 w-100 max-image-div';
  }
  $non_inline_staff_fields = ['field_staff_biography', 'field_staff_photo', 'field_image'];
  if ($elements['#bundle'] == 'staff_member' && !in_array($elements['#field_name'], $non_inline_staff_fields)) {
    $variables['attributes']['class'][] = 'w-100 d-inline-flex';
  }
  if ($elements['#bundle'] == 'staff_member' && $elements['#field_name'] == 'field_staff_photo') {
    $variables['attributes']['class'][] = 'staff-photo';
  }
  if ($elements['#field_name'] === 'image' && $elements['#view_mode'] == 'staff_member_card') {
    $variables['attributes']['class'][] = 'align-center';
  }

  // Multi-date events that appear in dynamic lists will not have their past dates appear
  // Examine the date items and remove them if they are in the past
  if ($elements['#field_name'] === 'field_event_date' && $elements['#bundle'] === 'event') {
    if ($elements['#view_mode'] === 'list' && count($variables['items']) > 1) {
      // If it is a list, and ALL of the events are in the past, we still want to display one date
      // so keep track of the index and flag if any events have been included
      $final_element_index = count($variables['items']) - 1;
      $all_past_dates_flag = true;

      $current_date = time();
      foreach ($elements['#items'] as $key => $item) {
        $event_start_date = $item->getValue()['value'];
        if ($event_start_date < $current_date) {
          // If we are on the final element AND no other dates are in the future, do not unset the final item.
          if ($key == $final_element_index && $all_past_dates_flag) {
            continue;
          } else {
            unset($variables['items'][$key]);
          }
        } else {
          $all_past_dates_flag = false;
        }
      }
    }
  }
}


function epa_intranet_preprocess_media(&$variables) {
  if ($variables['view_mode'] == 'slideshow') {
    $variables['attributes']['class'][] = 'grid-row';
  }
}

function epa_intranet_preprocess_views_view_table(&$variables) {
  $view = $variables['view'];
  $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  if ($current_user->hasRole('authenticated')) {
    if ($view->id() == 'organizations_with_staff' && $view->current_display != 'main_page') {
      $results = $variables['result'];
      if (count($results) > 0) {
        $key = array_keys($results)[0];
        $tid = $variables["result"][$key]->tid;
        if (!empty($tid)) {
          $variables['sort_view_link'] = '/staff/staff-order/' . $tid;
        }
      }
    }
  }
}

function epa_intranet_preprocess_page(&$variables) {
  //   Load correct Hero revision for page
  if (isset($variables['node'])) {
    $node = $variables['node'];
    if (is_numeric($node)) {
      $node_revision = \Drupal::routeMatch()->getParameter('node_revision');
      if (isset($node_revision)) {
        $node = \Drupal::entityTypeManager()->getStorage('node')->loadRevision($node_revision);
      }
    }
    if (isset($node) && in_array('field_hero', array_keys($node->getFields()))) {
      $variables['hero_field'] = $node->get('field_hero')->view();
    }
  }
}

function epa_intranet_preprocess_views_view__staff_order(&$variables) {
  $view = $variables['view'];
  if ($view->id() == 'staff_order' && count($view->args) > 0) {
    $tid = $view->args[0];
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
    if (isset($term) && !empty($term)) {
      $name = $term->label();
      $variables['title'] = $name;
    }
  }
}

function epa_intranet_preprocess_views_view_grouping(&$variables) {
  $view = $variables['view'];
  if ($view->id() === 'organizations_with_staff') {
    $parent_terms = [];
    $child_tid_row = '-1';
    $grouped_rows = $variables['rows'];
    $row_data = reset($grouped_rows);

    if (isset($row_data['rows']) && count($row_data['rows']) > 0) {
      $staff_rows = $row_data['rows'];
      $staff_row_data = reset($staff_rows);
      $child_tid_row = $staff_row_data->tid;
      $parent_terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadAllParents($child_tid_row);
    }
    $variables['title'] = generate_grouping_title($parent_terms, $child_tid_row);
  }

}

/**
 * @param array $parent_terms
 * @param string $child_tid_row
 * @return string
 */
function generate_grouping_title(array $parent_terms, string $child_tid_row): string {
  $grouping_title = '';
  foreach ($parent_terms as $term) {
    if ($term->id() != $child_tid_row) {
      if (!empty($grouping_title)) {
        $dash = ' - ';
      } else {
        $dash = '';
      }
      $grouping_title = $term->getName() . $dash . $grouping_title;
    }
  }
  return $grouping_title;
}

function epa_intranet_preprocess_fieldset(&$variables) {
  $element = $variables['element'];
  if (isset($element['#type']) && $element['#type'] == 'fieldset') {
    $variables['parent_fieldset'] = TRUE;
  }
}

function epa_intranet_preprocess_input__submit(&$variables) {
  $element = $variables['element'];
  if (is_add_or_remove_button($element)) {
    $variables['attributes']['class'][] = 'usa-button--base';
  }
}


function is_add_or_remove_button($element) {
  // Add More/ Remove elements have multiple values in Submit
  return isset($element['#submit']) && is_array($element['#submit'][0]);
}
