apiVersion: apps/v1
kind: Deployment
metadata:
  name: intranetcms
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    eks.amazonaws.com/compute-type: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: intranetcms
      #This needs to match label on ingress
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: intranetcms
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "backend"
      volumes:
        - name: intranetcms-storage
          persistentVolumeClaim:
            claimName: intranetcms-efs-pvc
      containers:
        - name: intranetcms
          image: registry.epa.gov/intranet-cms/intracms/intranetcms-build:$CI_COMMIT_SHORT_SHA
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
            - containerPort: 443
          env:
            - name: REDEPLOY_META
              value: $CI_JOB_ID-$CI_COMMIT_SHA
            - name: WEB_HTTPS
              value: "false"
            - name: WEB_HTTPS_ONLY
              value: "false"
          livenessProbe:
            tcpSocket:
              #port: 9000
              port: 443
            #httpGet:
            #  path: /
            #  port: 80
            #  scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            #timeoutSeconds: 20
            failureThreshold: 2
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: intranetcms-storage
              mountPath: /public
      imagePullSecrets:
        - name: glcr-auth

---

apiVersion: v1
kind: Service
metadata:
  name: intranetcms
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
      name: https
  selector:
    app: intranetcms

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: intranetcms-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
spec:
  tls:
    - hosts:
        - stage.intranetcms-stage.aws.epa.gov
      secretName: tls-devsecops-shared-webapp
  rules:
    - host: stage.intranetcms-stage.aws.epa.gov
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: intranetcms
                port:
                  number: 443
